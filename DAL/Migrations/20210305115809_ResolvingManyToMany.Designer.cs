// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(BoengServiceWebSiteContext))]
    [Migration("20210305115809_ResolvingManyToMany")]
    partial class ResolvingManyToMany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.ListedPlaneModel", b =>
                {
                    b.Property<int>("PlaneModelId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("PlaneModelId");

                    b.HasIndex("UserId");

                    b.ToTable("ListedPlaneModel");
                });

            modelBuilder.Entity("DAL.Entities.PlaneModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("YearOfProd")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PlaneModel");
                });

            modelBuilder.Entity("DAL.Entities.PlanePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("ManufacturingDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("PlaneModelId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaneModelId");

                    b.ToTable("PlanePart");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PlaneModelUser", b =>
                {
                    b.Property<int>("PlaneModelsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("PlaneModelsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("PlaneModelUser");
                });

            modelBuilder.Entity("DAL.Entities.ListedPlaneModel", b =>
                {
                    b.HasOne("DAL.Entities.PlaneModel", "PlaneModel")
                        .WithMany()
                        .HasForeignKey("PlaneModelId")
                        .HasConstraintName("FK_ListedPlane_PlaneModel")
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ListedPlane_User")
                        .IsRequired();

                    b.Navigation("PlaneModel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.PlanePart", b =>
                {
                    b.HasOne("DAL.Entities.PlaneModel", "PlaneModel")
                        .WithMany("PlaneParts")
                        .HasForeignKey("PlaneModelId")
                        .HasConstraintName("FK_PlanePart_PlaneModel")
                        .IsRequired();

                    b.Navigation("PlaneModel");
                });

            modelBuilder.Entity("PlaneModelUser", b =>
                {
                    b.HasOne("DAL.Entities.PlaneModel", null)
                        .WithMany()
                        .HasForeignKey("PlaneModelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Entities.PlaneModel", b =>
                {
                    b.Navigation("PlaneParts");
                });
#pragma warning restore 612, 618
        }
    }
}
